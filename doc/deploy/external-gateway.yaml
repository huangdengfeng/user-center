apiVersion: v1
kind: ConfigMap
metadata:
  namespace: user
  name: external-gateway
data:
  application.properties: |-
    listen.port=80
    deploy.idc=${IDC}
    user.server.app.address=user-server-app.user:80
  application-rule.yaml: |-
    router:
      items:
        - src-header: x-user-id
          dst-header: x-user-set
          segment-length: 2
          rules:
            - start: 00
              end: 24
              set: user-set00
            - start: 25
              end: 49
              set: user-set01
            - start: 50
              end: 74
              set: user-set10
            - start: 75
              end: 99
              set: user-set11
---
apiVersion: v1
kind: Service
metadata:
  namespace: user
  name: external-gateway
  labels:
    idc: ${idc}
spec:
  # 默认是，只有集群内部可以访问
  type: ClusterIP
  selector:
    app: external-gateway
  ports:
    - name: external-gateway-service-port
      protocol: TCP
      port: 80
      # 可以写实际pod中端口，也可以引用端口名称
      targetPort: http
---
apiVersion: v1
kind: Service
metadata:
  namespace: user
  name: external-gateway-${idc}
  labels:
    idc: ${idc}
spec:
  # 默认是，只有集群内部可以访问
  type: ClusterIP
  selector:
    app: external-gateway
    idc: ${idc}
  ports:
    - name: external-gateway-service-port
      protocol: TCP
      port: 80
      # 可以写实际pod中端口，也可以引用端口名称
      targetPort: http
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: user
  name: external-gateway-${idc}
spec:
  selector:
    matchLabels:
      app: external-gateway
      version: v1
      idc: ${idc}
  replicas: 1
  template:
    metadata:
      labels:
        app: external-gateway
        version: v1
        idc: ${idc}
    spec:
      nodeSelector:
        layer: application
        idc: ${idc}
      containers:
        - name: external-gateway
          image: 734839030/external-gateway:1.0.0-SNAPSHOT
          imagePullPolicy: IfNotPresent
          env:
            - name: IDC
              value: ${idc}
          ports:
            - containerPort: 80
              name: http
          volumeMounts:
            - mountPath: /data/external-gateway/conf/application.properties
              name: external-gateway-config-volume
              subPath: application.properties
            - mountPath: /data/external-gateway/conf/application-rule.yaml
              name: external-gateway-config-volume
              subPath: application-rule.yaml
      volumes:
        - name: external-gateway-config-volume
          configMap:
            name: external-gateway
            items:
              - key: application.properties
                path: application.properties
              - key: application-rule.yaml
                path: application-rule.yaml


