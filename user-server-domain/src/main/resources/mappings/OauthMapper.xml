<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.seezoon.user.domain.repository.mapper.OauthMapper">
    <resultMap id="BaseResultMap" type="com.seezoon.user.domain.repository.po.OauthPO">
        <id column="uid" jdbcType="BIGINT" property="uid"/>
        <result column="oauth_type" jdbcType="TINYINT" property="oauthType"/>
        <result column="oauth_id" jdbcType="VARCHAR" property="oauthId"/>
        <result column="union_id" jdbcType="VARCHAR" property="unionId"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>

    <sql id="Base_Column_List">
    t.uid,t.oauth_type,t.oauth_id,t.union_id,t.status,t.create_time,t.update_time
    </sql>

    <sql id="Query_Table">
    t_oauth t
    </sql>

    <select id="selectByPrimaryKey"
            parameterType="com.seezoon.user.domain.repository.po.OauthPO$OauthPK"
            resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Query_Table"/>
        where t.uid = #{uid} and t.oauth_type = #{oauthType} and t.oauth_id = #{oauthId}
    </select>

    <select id="selectByPrimaryKeyForUpdate"
            parameterType="com.seezoon.user.domain.repository.po.OauthPO$OauthPK"
            resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Query_Table"/>
        where t.uid = #{uid} and t.oauth_type = #{oauthType} and t.oauth_id = #{oauthId} for update
    </select>

    <select id="selectByCondition"
            parameterType="com.seezoon.user.domain.repository.po.OauthPOCondition"
            resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Query_Table"/>
        <choose>
            <when test="sortField != null and sortField != '' and sortOrder != null and sortOrder !=''">
                order by ${sortField} ${sortOrder}
            </when>
            <otherwise>
                order by t.create_time desc
            </otherwise>
        </choose>
    </select>

    <delete id="deleteByPrimaryKey">
        delete t from t_oauth t
        where t.uid in
        <foreach item="item" collection="array" separator="," open="(" close=")">
            #{item}
        </foreach>
    </delete>

    <insert id="insert">
        insert into t_oauth (uid,oauth_type,oauth_id,union_id,status,create_time,update_time)
        values
        <foreach item="item" collection="array" separator=",">
            (#{item.uid},#{item.oauthType},#{item.oauthId},#{item.unionId},#{item.status},#{item.createTime},#{item.updateTime})
        </foreach>
    </insert>

    <update id="updateByPrimaryKeySelective"
            parameterType="com.seezoon.user.domain.repository.po.OauthPO">
        update t_oauth t
        <set>
            <if test="oauthType != null">
                t.oauth_type = #{oauthType},
            </if>
            <if test="oauthId != null">
                t.oauth_id = #{oauthId},
            </if>
            <if test="unionId != null">
                t.union_id = #{unionId},
            </if>
            <if test="status != null">
                t.status = #{status},
            </if>
            <if test="updateTime != null">
                t.update_time = #{updateTime}
            </if>
        </set>
        where t.uid = #{uid} and t.oauth_type = #{oauthType} and t.oauth_id = #{oauthId} limit 2
    </update>
    <update id="updateByPrimaryKey" parameterType="com.seezoon.user.domain.repository.po.OauthPO">
        update t_oauth t set
        t.oauth_type = #{oauthType}
        ,t.oauth_id = #{oauthId}
        ,t.union_id = #{unionId}
        ,t.status = #{status}
        ,t.update_time = #{updateTime}
        where t.uid = #{uid} and t.oauth_type = #{oauthType} and t.oauth_id = #{oauthId} limit 2
    </update>
</mapper>