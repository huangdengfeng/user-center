<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.seezoon.user.domain.repository.mapper.RelationMapper">
    <resultMap id="BaseResultMap" type="com.seezoon.user.domain.repository.po.RelationPO">
        <id column="uid" jdbcType="BIGINT" property="uid"/>
        <result column="relation_type" jdbcType="TINYINT" property="relationType"/>
        <result column="relation_value" jdbcType="VARCHAR" property="relationValue"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>

    <sql id="Base_Column_List">
    t.uid,t.relation_type,t.relation_value,t.status,t.create_time,t.update_time
    </sql>

    <sql id="Query_Table">
    t_relation t
    </sql>

    <select id="selectByPrimaryKey"
            parameterType="com.seezoon.user.domain.repository.po.RelationPO$RelationPK"
            resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Query_Table"/>
        where t.uid = #{uid} and t.relation_type = #{relationType} and t.relation_value =
        #{relationValue}
    </select>

    <select id="selectByPrimaryKeyForUpdate"
            parameterType="com.seezoon.user.domain.repository.po.RelationPO$RelationPK"
            resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Query_Table"/>
        where t.uid = #{uid} and t.relation_type = #{relationType} and
        t.relation_value = #{relationValue} for update
    </select>

    <select id="selectByCondition"
            parameterType="com.seezoon.user.domain.repository.po.RelationPOCondition"
            resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Query_Table"/>
        <choose>
            <when test="sortField != null and sortField != '' and sortOrder != null and sortOrder !=''">
                order by ${sortField} ${sortOrder}
            </when>
            <otherwise>
                order by t.create_time desc
            </otherwise>
        </choose>
    </select>

    <delete id="deleteByPrimaryKey">
        delete t from t_relation t
        where t.uid in
        <foreach item="item" collection="array" separator="," open="(" close=")">
            #{item}
        </foreach>
    </delete>

    <insert id="insert">
        insert into t_relation (uid,relation_type,relation_value,status,create_time,update_time)
        values
        <foreach item="item" collection="array" separator=",">
            (#{item.uid},#{item.relationType},#{item.relationValue},#{item.status},#{item.createTime},#{item.updateTime})
        </foreach>
    </insert>

    <update id="updateByPrimaryKeySelective"
            parameterType="com.seezoon.user.domain.repository.po.RelationPO">
        update t_relation t
        <set>
            <if test="relationType != null">
                t.relation_type = #{relationType},
            </if>
            <if test="relationValue != null">
                t.relation_value = #{relationValue},
            </if>
            <if test="status != null">
                t.status = #{status},
            </if>
            <if test="updateTime != null">
                t.update_time = #{updateTime}
            </if>
        </set>
        where t.uid = #{uid} and t.relation_type = #{relationType} and t.relation_value =
        #{relationValue} limit 2
    </update>
    <update id="updateByPrimaryKey"
            parameterType="com.seezoon.user.domain.repository.po.RelationPO">
        update t_relation t set
        t.relation_type = #{relationType}
        ,t.relation_value = #{relationValue}
        ,t.status = #{status}
        ,t.update_time = #{updateTime}
        where t.uid = #{uid} and t.relation_type = #{relationType} and t.relation_value = #{relationValue} limit 2
    </update>
</mapper>